# JMH version: 1.35
# VM version: JDK 1.8.0_271, Java HotSpot(TM) 64-Bit Server VM, 25.271-b09
# VM invoker: D:\Java\jdk1.8.0_271\jdk1.8.0_271\jre\bin\java.exe
# VM options: -javaagent:D:\develop\IntelliJ IDEA 2022.3\lib\idea_rt.jar=61860:D:\develop\IntelliJ IDEA 2022.3\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: top.silwings.dynamicmock.core.MockHandlerJmh.test204

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 5
# Warmup Iteration   1: 637.845 ops/s
# Warmup Iteration   2: 844.500 ops/s
# Warmup Iteration   3: 873.603 ops/s
# Warmup Iteration   4: 867.315 ops/s
# Warmup Iteration   5: 887.510 ops/s
Iteration   1: 907.667 ops/s
Iteration   2: 903.945 ops/s
Iteration   3: 896.480 ops/s
Iteration   4: 887.692 ops/s
Iteration   5: 909.171 ops/s

# Run progress: 20.00% complete, ETA 00:06:50
# Fork: 2 of 5
# Warmup Iteration   1: 719.062 ops/s
# Warmup Iteration   2: 876.482 ops/s
# Warmup Iteration   3: 861.200 ops/s
# Warmup Iteration   4: 870.328 ops/s
# Warmup Iteration   5: 902.353 ops/s
Iteration   1: 907.116 ops/s
Iteration   2: 894.678 ops/s
Iteration   3: 882.100 ops/s
Iteration   4: 919.655 ops/s
Iteration   5: 916.337 ops/s

# Run progress: 40.00% complete, ETA 00:05:07
# Fork: 3 of 5
# Warmup Iteration   1: 754.195 ops/s
# Warmup Iteration   2: 938.777 ops/s
# Warmup Iteration   3: 948.619 ops/s
# Warmup Iteration   4: 938.390 ops/s
# Warmup Iteration   5: 907.279 ops/s
Iteration   1: 919.866 ops/s
Iteration   2: 895.504 ops/s
Iteration   3: 786.824 ops/s
Iteration   4: 713.049 ops/s
Iteration   5: 809.217 ops/s

# Run progress: 60.00% complete, ETA 00:03:24
# Fork: 4 of 5
# Warmup Iteration   1: 651.115 ops/s
# Warmup Iteration   2: 811.148 ops/s
# Warmup Iteration   3: 923.717 ops/s
# Warmup Iteration   4: 889.830 ops/s
# Warmup Iteration   5: 830.717 ops/s
Iteration   1: 868.067 ops/s
Iteration   2: 911.241 ops/s
Iteration   3: 891.521 ops/s
Iteration   4: 838.724 ops/s
Iteration   5: 883.729 ops/s

# Run progress: 80.00% complete, ETA 00:01:42
# Fork: 5 of 5
# Warmup Iteration   1: 718.671 ops/s
# Warmup Iteration   2: 853.324 ops/s
# Warmup Iteration   3: 824.611 ops/s
# Warmup Iteration   4: 953.337 ops/s
# Warmup Iteration   5: 920.030 ops/s
Iteration   1: 833.231 ops/s
Iteration   2: 738.015 ops/s
Iteration   3: 876.359 ops/s
Iteration   4: 774.827 ops/s
Iteration   5: 818.188 ops/s


Result "top.silwings.dynamicmock.core.MockHandlerJmh.test204":
  863.328 ±(99.9%) 44.058 ops/s [Average]
  (min, avg, max) = (713.049, 863.328, 919.866), stdev = 58.817
  CI (99.9%): [819.270, 907.386] (assumes normal distribution)


# Run complete. Total time: 00:08:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                Mode  Cnt    Score    Error  Units
MockHandlerJmh.test204  thrpt   25  863.328 ± 44.058  ops/s

仅运行page动态对象迭代数组-单表达式